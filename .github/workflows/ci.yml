name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  check_http:
    strategy:
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
        version:
          - nightly-2022-09-14
    name: http check @ ${{ matrix.target.name }} - ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install ${{ matrix.version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
        profile: minimal
        override: true

    - name: Free up disk space
      if: matrix.target.os == 'ubuntu-latest'
      run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /usr/local/lib/android && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"

    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v1.2.0

    - name: Install cargo-hack
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-hack

    - name: check-non-linux
      if: matrix.target.os != 'ubuntu-latest'
      run: |
        cargo ci-check-http-exclude-io-uring

    - name: check-linux
      if: matrix.target.os == 'ubuntu-latest'
      run: |
        sudo bash -c "ulimit -Sl 512 && ulimit -Hl 512 && PATH=$PATH:/usr/share/rust/.cargo/bin && RUSTUP_TOOLCHAIN=${{ matrix.version }} cargo ci-check-http"

    - name: Clear the cargo caches
      run: |
        cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean
        cargo-cache

  check_web:
    strategy:
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
        version:
          - nightly-2022-09-14
    name: web check @ ${{ matrix.target.name }} - ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install ${{ matrix.version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
        profile: minimal
        override: true

    - name: Free up disk space
      if: matrix.target.os == 'ubuntu-latest'
      run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /usr/local/lib/android && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"

    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v1.2.0

    - name: Install cargo-hack
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-hack

    - name: check-non-linux
      if: matrix.target.os != 'ubuntu-latest'
      run: |
        cargo ci-check-web-exclude-io-uring

    - name: check-linux
      if: matrix.target.os == 'ubuntu-latest'
      run: |
        sudo bash -c "ulimit -Sl 512 && ulimit -Hl 512 && PATH=$PATH:/usr/share/rust/.cargo/bin && RUSTUP_TOOLCHAIN=${{ matrix.version }} cargo ci-check-web"

    - name: Clear the cargo caches
      run: |
        cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean
        cargo-cache

  check_client:
    strategy:
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
        version:
          - nightly-2022-09-14
    name: client check @ ${{ matrix.target.name }} - ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install ${{ matrix.version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
        profile: minimal
        override: true

    - name: Free up disk space
      if: matrix.target.os == 'ubuntu-latest'
      run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /usr/local/lib/android && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"

    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v1.2.0

    - name: Install cargo-hack
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-hack

    - name: check-non-linux
      if: matrix.target.os != 'ubuntu-latest'
      run: |
        cargo ci-check-client-exclude-io-uring

    - name: check-linux
      if: matrix.target.os == 'ubuntu-latest'
      run: |
        sudo bash -c "ulimit -Sl 512 && ulimit -Hl 512 && PATH=$PATH:/usr/share/rust/.cargo/bin && RUSTUP_TOOLCHAIN=${{ matrix.version }} cargo ci-check-client"

    - name: Clear the cargo caches
      run: |
        cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean
        cargo-cache      

  check_other_and_test:
    strategy:
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
        version:
          - nightly-2022-09-14
    name: test and other check @ ${{ matrix.target.name }} - ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}  
    
    steps:
    - uses: actions/checkout@v3

    - name: Install ${{ matrix.version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
        profile: minimal
        override: true

    - name: Free up disk space
      if: matrix.target.os == 'ubuntu-latest'
      run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /usr/local/lib/android && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"

    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v1.2.0

    - name: Install cargo-hack
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-hack

    - name: check-non-linux
      if: matrix.target.os != 'ubuntu-latest'
      run: |
        cargo ci-check-other-exclude-io-uring

    - name: check-linux
      if: matrix.target.os == 'ubuntu-latest'
      run: |
        sudo bash -c "ulimit -Sl 512 && ulimit -Hl 512 && PATH=$PATH:/usr/share/rust/.cargo/bin && RUSTUP_TOOLCHAIN=${{ matrix.version }} cargo ci-check-other"     

#    - name: tests-non-linux
#      if: matrix.target.os != 'ubuntu-latest'
#      run: |
#        cargo ci-test-exclude-io-uring

    - name: tests-linux
      if: matrix.target.os == 'ubuntu-latest'
      run: |
        sudo bash -c "ulimit -Sl 512 && ulimit -Hl 512 && PATH=$PATH:/usr/share/rust/.cargo/bin && RUSTUP_TOOLCHAIN=${{ matrix.version }} cargo ci-test"  

    - name: Clear the cargo caches
      run: |
        cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean
        cargo-cache

  check_examples:
    strategy:
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
        version:
          - nightly-2022-09-14
    name: example check @ ${{ matrix.target.name }} - ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install ${{ matrix.version }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
          profile: minimal
          override: true

      - name: Free up disk space
        if: matrix.target.os == 'ubuntu-latest'
        run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /usr/local/lib/android && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v1.2.0

      - name: Install cargo-hack
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-hack

      - name: check-non-linux
        if: matrix.target.os != 'ubuntu-latest'
        run: |
          cd examples && cargo ci-check-examples-exclude-unix

      - name: check-linux
        if: matrix.target.os == 'ubuntu-latest'
        run: |
          sudo bash -c "ulimit -Sl 512 && ulimit -Hl 512 && PATH=$PATH:/usr/share/rust/.cargo/bin && cd examples && RUSTUP_TOOLCHAIN=${{ matrix.version }} cargo ci-check-examples"     

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean
          cargo-cache

  miri-test-unsafe:
    name: miri test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: miri
          override: true
      - name: miri
        run: cargo ci-miri-test
        env:
          MIRIFLAGS: -Zmiri-strict-provenance -Zmiri-disable-isolation -Zmiri-symbolic-alignment-check
          PROPTEST_CASES: 10
