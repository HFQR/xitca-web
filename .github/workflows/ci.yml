name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  build_and_test:
    strategy:
      matrix:
        target:
          - { name: Linux, os: ubuntu-latest, triple: x86_64-unknown-linux-gnu }
          - { name: macOS, os: macos-latest, triple: x86_64-apple-darwin }
        version:
          - nightly-2022-04-05
    name: ${{ matrix.target.name }} / ${{ matrix.version }}
    runs-on: ${{ matrix.target.os }}  
    
    steps:
    - uses: actions/checkout@master

    - name: Install ${{ matrix.version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.version }}-${{ matrix.target.triple }}
        profile: minimal
        override: true

    - name: Free up disk space
      if: matrix.target.os == 'ubuntu-latest'
      run: sudo rm -rf /usr/share/dotnet && sudo rm -rf /usr/local/lib/android && sudo rm -rf /opt/ghc && sudo rm -rf "/usr/local/share/boost" && sudo rm -rf "$AGENT_TOOLSDIRECTORY"

    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v1.2.0

    - name: Install cargo-hack
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-hack

    - name: check-non-linux
      if: matrix.target.os != 'ubuntu-latest'
      run: |
        cargo ci-check-exclude-io-uring

    - name: check-linux
      if: matrix.target.os == 'ubuntu-latest'
      run: |
        sudo bash -c "ulimit -Sl 512 && ulimit -Hl 512 && PATH=$PATH:/usr/share/rust/.cargo/bin && RUSTUP_TOOLCHAIN=${{ matrix.version }} cargo ci-check"     

#    - name: tests-non-linux
#      if: matrix.target.os != 'ubuntu-latest'
#      run: |
#        cargo ci-test-exclude-io-uring

    - name: tests-linux
      if: matrix.target.os == 'ubuntu-latest'
      run: |
        sudo bash -c "ulimit -Sl 512 && ulimit -Hl 512 && PATH=$PATH:/usr/share/rust/.cargo/bin && RUSTUP_TOOLCHAIN=${{ matrix.version }} cargo ci-test"  

    - name: Clear the cargo caches
      run: |
        cargo install cargo-cache --version 0.6.2 --no-default-features --features ci-autoclean
        cargo-cache
