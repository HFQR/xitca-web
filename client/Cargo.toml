[package]
name = "xitca-client"
version = "0.1.0"
edition = "2021"

[features]
default = []
http2 = ["h2", "itoa", "xitca-http/http2"]
http3 = ["h3/test_helpers", "h3-quinn", "itoa", "async-stream", "tokio-rustls", "webpki-roots"]
openssl = ["openssl-crate", "tokio-openssl"]
rustls = ["tokio-rustls", "webpki-roots"]
json = ["serde", "serde_json"]
websocket = ["http-ws", "futures-util/sink"]

# used to test niche client side usage and correctness of server implemenation:
# - http/2 clear text over plain tcp connection
# - http/3 connection to server with self signed certificates.
dangerous = ["tokio-rustls/dangerous_configuration"]

[dependencies]
xitca-http = "0.1"
xitca-io = "0.1"

futures-core = { version = "0.3.17", default-features = false, features =["alloc"] }
futures-util = { version = "0.3.17", default-features = false, features =["alloc"] }
httparse = "1.5.1"
pin-project-lite = "0.2.7"
tokio = { version = "1.13", features = ["rt"] }
tokio-util = { version = "0.6", features = ["io"] }

# http/2 support
h2 = { version = "0.3.7", optional = true }

# http/3 support
h3 = { version = "0.0.0", optional = true }
h3-quinn = { version = "0.0.0", optional = true }
async-stream = { version = "0.3", optional = true }

# http/2 and http/3 shared
itoa = { version = "0.4.8", optional = true }

# openssl support
openssl-crate = { package = "openssl", version = "0.10", optional = true }
tokio-openssl = { version = "0.6.3", optional = true }

# rustls, http3 and dangerous features shared support
tokio-rustls = { version = "0.23", optional = true }
webpki-roots = { version = "0.22", optional = true }

# serde support
serde = { version = "1.0.130", default-features = false, optional = true }

# json support
serde_json = { version = "1", optional = true }

# websocket support
http-ws = { version = "0.1", default-features = false, optional = true }

[dev-dependencies]
async-trait = "0.1.51"
tokio = { version = "1.12", features = ["macros"] }
